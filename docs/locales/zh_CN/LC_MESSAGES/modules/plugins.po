# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, csunny
# This file is distributed under the same license as the DB-GPT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DB-GPT 0.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 15:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../modules/plugins.md:1 e8c539b65ccd459793e8ed3812903578
msgid "Plugins"
msgstr "插件"

#: ../../modules/plugins.md:3 0d6f6bdcf843416fb35d9f51df52bead
msgid ""
"The ability of Agent and Plugin is the core of whether large models can "
"be automated. In this project, we natively support the plugin mode, and "
"large models can automatically achieve their goals. At the same time, in "
"order to give full play to the advantages of the community, the plugins "
"used in this project natively support the Auto-GPT plugin ecology, that "
"is, Auto-GPT plugins can directly run in our project."
msgstr ""
"Agent与插件能力是大模型能否自动化的核心，在本的项目中，原生支持插件模式，大模型可以自动化完成目标。 同时为了充分发挥社区的优势"
"，本项目中所用的插件原生支持Auto-GPT插件生态，即Auto-GPT的插件可以直接在我们的项目中运行。"

#: ../../modules/plugins.md:5 625763bc41fe417c8e4ea03ab2f8fdfc
#, fuzzy
msgid "The LLM (Language Model) suitable for the Plugin scene is"
msgstr "Plugin场景适用的LLM是      * chatgpt3.5.     * chatgpt4."

#: ../../modules/plugins.md:6 b3bd64693a4f4bf8b64b9224d3e1532e
msgid "chatgpt3.5."
msgstr ""

#: ../../modules/plugins.md:7 46d9220e63384594b54c2c176077d962
msgid "chatgpt4."
msgstr ""

#: ../../modules/plugins.md:10 8c539e139f6648b2bef5dc683b8e093c
#, fuzzy
msgid "Local Plugins"
msgstr "插件"

#: ../../modules/plugins.md:12 2cc7ba992d524913b3377cad3bf747d3
msgid "1.1 How to write local plugins."
msgstr ""

#: ../../modules/plugins.md:14 eddffc1d2c434e45890a9befa1bb5160
msgid ""
"Local plugins use the Auto-GPT plugin template. A simple example is as "
"follows: first write a plugin file called \"sql_executor.py\"."
msgstr ""

#: ../../modules/plugins.md:44 06efbea552bb4dc7828d842b779e41d4
msgid ""
"Then set the \"can_handle_post_prompt\" method of the plugin template to "
"True. In the \"post_prompt\" method, write the prompt information and the"
" mapped plugin function."
msgstr ""

#: ../../modules/plugins.md:86 afd3cfb379bb463e97e515ae65790830
msgid "1.2 How to use local plugins"
msgstr ""

#: ../../modules/plugins.md:88 f43a70e4cb5c4846a5bb8df3853021ba
msgid ""
"Pack your plugin project into `your-plugin.zip` and place it in the "
"`/plugins/` directory of the DB-GPT project. After starting the "
"webserver, you can select and use it in the `Plugin Model` section."
msgstr ""

#: ../../modules/plugins.md:91 8269458bd7f5480dbc56100865eb1eb0
#, fuzzy
msgid "Public Plugins"
msgstr "插件"

#: ../../modules/plugins.md:93 ec5bb7b6b2cf464d8b8400f3dfd9a50e
msgid "1.1 How to use public plugins"
msgstr ""

#: ../../modules/plugins.md:95 3025a85c905c49b6b2ac3f5c39c84c93
msgid ""
"By default, after launching the webserver, plugins from the public plugin"
" library `DB-GPT-Plugins` will be automatically loaded. For more details,"
" please refer to [DB-GPT-Plugins](https://github.com/csunny/DB-GPT-"
"Plugins)"
msgstr ""

#: ../../modules/plugins.md:97 e73d7779df254ba49fe7123ce06353aa
msgid "1.2 Contribute to the DB-GPT-Plugins repository"
msgstr ""

#: ../../modules/plugins.md:99 3297fb00dfc940e8a614c3858640cfe5
msgid ""
"Please refer to the plugin development process in the public plugin "
"library, and put the configuration parameters in `.plugin_env`"
msgstr ""

#: ../../modules/plugins.md:101 13280b270b304e139ed67e5b0dafa5b4
msgid ""
"We warmly welcome everyone to contribute plugins to the public plugin "
"library!"
msgstr ""

#~ msgid "Local Plugins"
#~ msgstr "插件"

#~ msgid "1.1 How to write local plugins."
#~ msgstr "如何编写一个本地插件"

#~ msgid ""
#~ "Local plugins use the Auto-GPT "
#~ "plugin template. A simple example is "
#~ "as follows: first write a plugin "
#~ "file called \"sql_executor.py\"."
#~ msgstr "本地插件使用Auto-GPT插件模板，一个简单的示例如下：首先编写一个插件文件`sql_executor.py`"

#~ msgid ""
#~ "Then set the \"can_handle_post_prompt\" method"
#~ " of the plugin template to True. "
#~ "In the \"post_prompt\" method, write the"
#~ " prompt information and the mapped "
#~ "plugin function."
#~ msgstr "然后设置can_handle_post_prompt函数为True, 在post_prompt函数中编写prompt信息和插件映射函数"

#~ msgid "1.2 How to use local plugins"
#~ msgstr "1.2 如何使用本地插件"

#~ msgid ""
#~ "Pack your plugin project into `your-"
#~ "plugin.zip` and place it in the "
#~ "`/plugins/` directory of the DB-GPT "
#~ "project. After starting the webserver, "
#~ "you can select and use it in "
#~ "the `Plugin Model` section."
#~ msgstr ""
#~ "将您的插件项目打包成your-plugin.zip，并将其放置在DB-"
#~ "GPT项目的/plugins/目录中。启动Web服务器后，您可以在插件模型部分中选择并使用它。"

#~ msgid "Public Plugins"
#~ msgstr "插件"

#~ msgid "1.1 How to use public plugins"
#~ msgstr "1.1 如何编写公共插件"

#~ msgid ""
#~ "By default, after launching the "
#~ "webserver, plugins from the public "
#~ "plugin library `DB-GPT-Plugins` will "
#~ "be automatically loaded. For more "
#~ "details, please refer to [DB-GPT-"
#~ "Plugins](https://github.com/csunny/DB-GPT-Plugins)"
#~ msgstr ""
#~ "默认情况下，在启动Web服务器后，将自动加载来自公共插件库DB-GPT-Plugins的插件。要了解更多详情，请参阅"
#~ "[DB-GPT-Plugins](https://github.com/csunny/DB-GPT-"
#~ "Plugins)"

#~ msgid "1.2 Contribute to the DB-GPT-Plugins repository"
#~ msgstr "1.2 贡献到DB-GPT-Plugins仓库"

#~ msgid ""
#~ "Please refer to the plugin development"
#~ " process in the public plugin "
#~ "library, and put the configuration "
#~ "parameters in `.plugin_env`"
#~ msgstr "请参考公共插件库开发过程，将插件配置参数写入.plugin_env文件"

#~ msgid ""
#~ "We warmly welcome everyone to contribute"
#~ " plugins to the public plugin "
#~ "library!"
#~ msgstr "非常欢迎大家向我们公共插件库贡献插件！"

